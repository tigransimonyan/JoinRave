{"version":3,"sources":["play.svg","pause.svg","App.js","index.js"],"names":["audio","Audio","App","useState","track","setTrack","playing","setPlaying","loading","setLoading","canplay","setCanplay","play","fetch","then","response","json","src","metadata","file","load","catch","onCanplay","useEffect","currentTime","time","addEventListener","removeEventListener","className","PauseIcon","onClick","pause","PlayIcon","title","artist","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAAe,MAA0B,iCCA1B,MAA0B,kC,OCInCA,EAAQ,IAAIC,MAsEHC,MApEf,WAAgB,IAAD,MACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIiBN,oBAAS,GAJ1B,mBAINO,EAJM,KAIGC,EAJH,KAgBPC,EAAO,WACXH,GAAW,GAVJI,MAAM,oCACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLV,EAASU,GACTf,EAAMiB,IAAMF,EAASG,SAASC,KAC9BnB,EAAMoB,UAMKC,OAAM,WACnBZ,GAAW,OAUTa,EAAY,WACXZ,GACHC,GAAW,IAsBf,OAlBAY,qBAAU,WACJb,GAAWN,IACbJ,EAAMwB,YAAcpB,EAAMqB,KAC1BzB,EAAMY,OACNL,GAAW,GACXE,GAAW,MAEZ,CAACC,EAASN,IAEbmB,qBAAU,WAGR,OAFAvB,EAAM0B,iBAAiB,QAASd,GAChCZ,EAAM0B,iBAAiB,UAAWJ,GAC3B,WACLtB,EAAM2B,oBAAoB,QAASf,GACnCZ,EAAM2B,oBAAoB,UAAWL,MAEtC,IAGD,sBAAKM,UAAU,MAAf,UACGtB,EAAU,qBAAKW,IAAKY,EAAWC,QAhCvB,WACX9B,EAAM+B,QACNxB,GAAW,GACXI,GAAW,MA6B2C,qBAAKM,IAAKe,EAAUF,QAASlB,IACjF,sBAAKgB,UAAU,OAAf,UACGpB,GAAW,cACVA,GAAWJ,GACX,4CACGA,QADH,IACGA,GADH,UACGA,EAAOc,gBADV,aACG,EAAiBe,MADpB,OAC8B,mCAAI7B,QAAJ,IAAIA,GAAJ,UAAIA,EAAOc,gBAAX,aAAI,EAAiBgB,mBC7D7DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9e01e01d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/play.67fb6362.svg\";","export default __webpack_public_path__ + \"static/media/pause.12407eb8.svg\";","import { useEffect, useState } from 'react';\nimport PlayIcon from './play.svg';\nimport PauseIcon from './pause.svg';\n\nconst audio = new Audio();\n\nfunction App() {\n  const [track, setTrack] = useState(null);\n  const [playing, setPlaying] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [canplay, setCanplay] = useState(false);\n\n  const getNextTrack = () => {\n    return fetch('https://api.joinrave.com/current')\n      .then((response) => response.json())\n      .then((response) => {\n        setTrack(response);\n        audio.src = response.metadata.file;\n        audio.load();\n      });\n  };\n\n  const play = () => {\n    setLoading(true);\n    getNextTrack().catch(() => {\n      setLoading(false);\n    });\n  };\n\n  const stop = () => {\n    audio.pause();\n    setPlaying(false);\n    setCanplay(false);\n  };\n\n  const onCanplay = () => {\n    if (!canplay) {\n      setCanplay(true);\n    }\n  };\n\n  useEffect(() => {\n    if (canplay && track) {\n      audio.currentTime = track.time;\n      audio.play();\n      setPlaying(true);\n      setLoading(false);\n    }\n  }, [canplay, track]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', play);\n    audio.addEventListener('canplay', onCanplay);\n    return () => {\n      audio.removeEventListener('ended', play);\n      audio.removeEventListener('canplay', onCanplay);\n    };\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {playing ? <img src={PauseIcon} onClick={stop} /> : <img src={PlayIcon} onClick={play} />}\n      <div className=\"info\">\n        {loading && 'Loading...'}\n        {!loading && track && (\n          <>\n            {track?.metadata?.title} by <b>{track?.metadata?.artist}</b>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}